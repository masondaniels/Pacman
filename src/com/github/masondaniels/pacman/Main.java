package com.github.masondaniels.pacman;

import com.github.masondaniels.pacman.specific.Tile;
import com.github.masondaniels.pacman.specific.World;
import com.github.masondaniels.pacman.specific.entities.types.Blinky;
import com.github.masondaniels.pacman.specific.entities.types.Clyde;
import com.github.masondaniels.pacman.specific.entities.types.Inky;
import com.github.masondaniels.pacman.specific.entities.types.Pacman;
import com.github.masondaniels.pacman.specific.entities.types.Pinky;
import com.github.masondaniels.pacman.ui.App;

public class Main {

	public static void main(String[] args) throws InterruptedException {
		int width = args.length > 1 ? (args[0] != null ? Integer.parseInt(args[0]) : 28 * 8) : 28 * 8;
		int height = args.length > 1 ? (args[1] != null ? Integer.parseInt(args[1]) : 36 * 8) : 36 * 8;
		App app = new App(width, height, 28 * 8, 36 * 8);
		app.setTitle("Pacman");

		/*
		 * Types is an array which holds all tile data. https://i.imgur.com/ktViAy3.png
		 * for mappings.
		 */

		int[] types = { 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 2, 2,
				2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 1, 0, 8, 4, 2, 2, 3, 8, 4, 2, 2, 2, 3, 8, 1, 0, 8, 4, 2, 2, 2, 3, 8, 4, 2, 2, 3, 8, 1, 0, 8, 0, 8,
				8, 1, 8, 0, 8, 8, 8, 1, 8, 1, 0, 8, 0, 8, 8, 8, 1, 8, 0, 8, 8, 1, 8, 1, 0, 8, 6, 5, 5, 7, 8, 6, 5, 5, 5,
				7, 8, 6, 7, 8, 6, 5, 5, 5, 7, 8, 6, 5, 5, 7, 8, 1, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 0, 8, 4, 2, 2, 3, 8, 4, 3, 8, 4, 2, 2, 2, 2, 2, 2, 3, 8, 4, 3, 8, 4, 2, 2,
				3, 8, 1, 0, 8, 6, 5, 5, 7, 8, 0, 1, 8, 6, 5, 5, 3, 4, 5, 5, 7, 8, 0, 1, 8, 6, 5, 5, 7, 8, 1, 0, 8, 8, 8,
				8, 8, 8, 0, 1, 8, 8, 8, 8, 0, 1, 8, 8, 8, 8, 0, 1, 8, 8, 8, 8, 8, 8, 1, 6, 5, 5, 5, 5, 3, 8, 0, 6, 2, 2,
				3, 8, 0, 1, 8, 4, 2, 2, 7, 1, 8, 4, 5, 5, 5, 5, 7, 8, 8, 8, 8, 8, 0, 8, 0, 4, 5, 5, 7, 8, 6, 7, 8, 6, 5,
				5, 3, 1, 8, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 0, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 1, 8, 1, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 0, 1, 8, 4, 2, 2, 2, 2, 2, 2, 3, 8, 0, 1, 8, 1, 8, 8, 8, 8, 8, 2, 2, 2, 2,
				2, 7, 8, 6, 7, 8, 0, 8, 8, 8, 8, 8, 8, 1, 8, 6, 7, 8, 6, 2, 2, 2, 2, 2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0,
				8, 8, 8, 8, 8, 8, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 3, 8, 4, 3, 8, 0, 8, 8, 8, 8, 8, 8, 1,
				8, 4, 3, 8, 4, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 0, 8, 0, 1, 8, 6, 5, 5, 5, 5, 5, 5, 7, 8, 0, 1, 8, 1, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 0, 8, 0, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 1, 8, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 0, 8, 0, 1, 8, 4, 2, 2, 2, 2, 2, 2, 3, 8, 0, 1, 8, 1, 8, 8, 8, 8, 8, 4, 2, 2, 2, 2, 7, 8, 6, 7, 8, 6,
				5, 5, 3, 4, 5, 5, 7, 8, 6, 7, 8, 6, 2, 2, 2, 2, 3, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 0, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 1, 8, 4, 5, 5, 3, 8, 4, 2, 2, 2, 3, 8, 1, 0, 8, 4, 2, 2, 2, 3, 8, 4, 5, 5,
				3, 8, 0, 1, 8, 6, 2, 3, 0, 8, 6, 5, 5, 5, 7, 8, 6, 7, 8, 6, 5, 5, 5, 7, 8, 1, 4, 2, 7, 8, 0, 1, 8, 8, 8,
				1, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 0, 8, 8, 8, 0, 6, 2, 3, 8, 1, 0, 8, 4, 3, 8, 4,
				2, 2, 2, 2, 2, 2, 3, 8, 4, 3, 8, 1, 0, 8, 4, 2, 7, 4, 5, 7, 8, 6, 7, 8, 1, 0, 8, 6, 2, 2, 3, 4, 5, 5, 7,
				8, 1, 0, 8, 6, 7, 8, 6, 5, 3, 1, 8, 8, 8, 8, 8, 8, 1, 0, 8, 8, 8, 8, 1, 0, 8, 8, 8, 8, 1, 0, 8, 8, 8, 8,
				8, 8, 0, 1, 8, 4, 2, 2, 2, 2, 7, 6, 2, 2, 3, 8, 1, 0, 8, 4, 2, 2, 7, 6, 2, 2, 2, 2, 3, 8, 0, 1, 8, 6, 5,
				5, 5, 5, 5, 5, 5, 5, 7, 8, 6, 7, 8, 6, 5, 5, 5, 5, 5, 5, 5, 5, 7, 8, 0, 1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 0, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
				2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
				8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8 };

		/*
		 * Pells is similar to types except pells holds all pellet data.
		 */

		int[] pells = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
				0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,
				0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0,
				0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,
				1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,
				0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,
				0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,
				0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
				1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1,
				1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
				1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

		/*
		 * This boolean enables or disables visual debug.
		 */

		boolean debug = false;
		Tile[] tiles = new Tile[28 * 36];
		int i = 0;
		for (int y = 0; y < 36; y++) {
			for (int x = 0; x < 28; x++) {
				try {
					tiles[i] = new Tile(x * 8, y * 8, types[i]);
					tiles[i].setPellet(pells[i] == 1 ? true : false);
				} catch (Exception e) {
					tiles[i] = new Tile(x * 8, y * 8, 8);
				}
				i++;
			}
		}

		World world = new World(tiles, debug);
		Pacman pacman = new Pacman(14 * 8, 26 * 8 + 4, 8, 8, tiles, debug);
		Blinky blinky = new Blinky(8 * 8 + 4, 17 * 8 + 4, 8, 8, tiles, debug, pacman);
		Pinky pinky = new Pinky(8 * 8 + 4, 17 * 8 + 4, 8, 8, tiles, debug, pacman);
		Clyde clyde = new Clyde(8 * 8 + 4, 17 * 8 + 4, 8, 8, tiles, debug, pacman);
		Inky inky = new Inky(8 * 8 + 4, 17 * 8 + 4, 8, 8, tiles, debug, pacman, blinky);
		world.add(pinky);
		world.add(clyde);
		world.add(inky);
		world.add(blinky);
		world.add(pacman);
		app.addAppObj(world);

	}
}
